"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/components/planet.js":
/*!************************************!*\
  !*** ./pages/components/planet.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\nvar _s = $RefreshSig$();\n\n\nvar SpinningPlanet = function() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        // Create a scene\n        var scene = new three__WEBPACK_IMPORTED_MODULE_1__.Scene();\n        // Create a camera\n        var camera = new three__WEBPACK_IMPORTED_MODULE_1__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.z = 5;\n        // Create a renderer\n        var renderer = new three__WEBPACK_IMPORTED_MODULE_1__.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        document.body.appendChild(renderer.domElement);\n        // Create Earth sphere\n        var geometry = new three__WEBPACK_IMPORTED_MODULE_1__.SphereGeometry(2, 32, 32);\n        var earthTexture = new three__WEBPACK_IMPORTED_MODULE_1__.TextureLoader().load(\"path_to_earth_texture.jpg\"); // Load your Earth texture\n        var earthMaterial = new three__WEBPACK_IMPORTED_MODULE_1__.MeshBasicMaterial({\n            map: earthTexture\n        });\n        var earth = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(geometry, earthMaterial);\n        scene.add(earth);\n        // Create small spheres for continents (procedurally generated)\n        var continentGeometry = new three__WEBPACK_IMPORTED_MODULE_1__.SphereGeometry(0.1, 16, 16);\n        var continentMaterial = new three__WEBPACK_IMPORTED_MODULE_1__.MeshBasicMaterial({\n            color: 0xffffff\n        }); // White color for continents\n        // Procedurally generate positions for continents\n        var numContinents = 5;\n        for(var i = 0; i < numContinents; i++){\n            var latitude = (Math.random() - 0.5) * Math.PI; // Random latitude (-π/2 to π/2)\n            var longitude = (Math.random() - 0.5) * 2 * Math.PI; // Random longitude (-π to π)\n            var x = Math.cos(latitude) * Math.cos(longitude) * 1.9; // Slightly inside the Earth's surface\n            var y = Math.sin(latitude) * 1.9;\n            var z = Math.cos(latitude) * Math.sin(longitude) * 1.9;\n            var continentBall = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(continentGeometry, continentMaterial);\n            continentBall.position.set(x, y, z);\n            scene.add(continentBall);\n        }\n        // Create a function to animate the scene\n        var animate = function() {\n            requestAnimationFrame(animate);\n            // Rotate the Earth for animation\n            earth.rotation.y += 0.005;\n            // Render the scene with the camera\n            renderer.render(scene, camera);\n        };\n        // Call the animate function to start the animation\n        animate();\n        // Clean up Three.js objects on component unmount\n        return function() {\n            renderer.domElement.remove(); // Remove the renderer's DOM element\n            scene.dispose(); // Dispose of the scene and its children\n        };\n    }, []); // Empty dependency array ensures the effect runs once after initial render\n    return null; // Since Three.js handles rendering, return null or an empty div\n};\n_s(SpinningPlanet, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SpinningPlanet;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SpinningPlanet);\nvar _c;\n$RefreshReg$(_c, \"SpinningPlanet\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxFQUFFL0IsQ0FBQyxDQUFDLENBQUM7WUFDcENSLEtBQUssQ0FBQzBCLEdBQUcsQ0FBQ2UsYUFBYSxDQUFDLENBQUM7UUFDM0IsQ0FBQztRQUVELHlDQUF5QztRQUN6QyxJQUFNRSxPQUFPLEdBQUcsV0FBTTtZQUNwQkMscUJBQXFCLENBQUNELE9BQU8sQ0FBQyxDQUFDO1lBRS9CLGlDQUFpQztZQUNqQ25CLEtBQUssQ0FBQ3FCLFFBQVEsQ0FBQ04sQ0FBQyxJQUFJLEtBQUssQ0FBQztZQUUxQixtQ0FBbUM7WUFDbkM5QixRQUFRLENBQUNxQyxNQUFNLENBQUM5QyxLQUFLLEVBQUVFLE1BQU0sQ0FBQyxDQUFDO1FBQ2pDLENBQUM7UUFFRCxtREFBbUQ7UUFDbkR5QyxPQUFPLEVBQUUsQ0FBQztRQUVWLGlEQUFpRDtRQUNqRCxPQUFPLFdBQU07WUFDWGxDLFFBQVEsQ0FBQ00sVUFBVSxDQUFDZ0MsTUFBTSxFQUFFLENBQUMsQ0FBQyxvQ0FBb0M7WUFDbEUvQyxLQUFLLENBQUNnRCxPQUFPLEVBQUUsQ0FBQyxDQUFDLHdDQUF3QztRQUMzRCxDQUFDLENBQUM7SUFDSixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQywyRUFBMkU7SUFFbkYsT0FBTyxJQUFJLENBQUMsQ0FBQyxnRUFBZ0U7QUFDL0UsQ0FBQztHQTlES2pELGNBQWM7QUFBZEEsS0FBQUEsY0FBYztBQWdFcEIsK0RBQWVBLGNBQWMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9jb21wb25lbnRzL3BsYW5ldC5qcz9mNDkzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5cbmNvbnN0IFNwaW5uaW5nUGxhbmV0ID0gKCkgPT4ge1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIENyZWF0ZSBhIHNjZW5lXG4gICAgY29uc3Qgc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTtcblxuICAgIC8vIENyZWF0ZSBhIGNhbWVyYVxuICAgIGNvbnN0IGNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYSg3NSwgd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQsIDAuMSwgMTAwMCk7XG4gICAgY2FtZXJhLnBvc2l0aW9uLnogPSA1O1xuXG4gICAgLy8gQ3JlYXRlIGEgcmVuZGVyZXJcbiAgICBjb25zdCByZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKCk7XG4gICAgcmVuZGVyZXIuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHJlbmRlcmVyLmRvbUVsZW1lbnQpO1xuXG4gICAgLy8gQ3JlYXRlIEVhcnRoIHNwaGVyZVxuICAgIGNvbnN0IGdlb21ldHJ5ID0gbmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KDIsIDMyLCAzMik7XG4gICAgY29uc3QgZWFydGhUZXh0dXJlID0gbmV3IFRIUkVFLlRleHR1cmVMb2FkZXIoKS5sb2FkKCdwYXRoX3RvX2VhcnRoX3RleHR1cmUuanBnJyk7IC8vIExvYWQgeW91ciBFYXJ0aCB0ZXh0dXJlXG4gICAgY29uc3QgZWFydGhNYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7IG1hcDogZWFydGhUZXh0dXJlIH0pO1xuICAgIGNvbnN0IGVhcnRoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIGVhcnRoTWF0ZXJpYWwpO1xuICAgIHNjZW5lLmFkZChlYXJ0aCk7XG5cbiAgICAvLyBDcmVhdGUgc21hbGwgc3BoZXJlcyBmb3IgY29udGluZW50cyAocHJvY2VkdXJhbGx5IGdlbmVyYXRlZClcbiAgICBjb25zdCBjb250aW5lbnRHZW9tZXRyeSA9IG5ldyBUSFJFRS5TcGhlcmVHZW9tZXRyeSgwLjEsIDE2LCAxNik7XG4gICAgY29uc3QgY29udGluZW50TWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoeyBjb2xvcjogMHhmZmZmZmYgfSk7IC8vIFdoaXRlIGNvbG9yIGZvciBjb250aW5lbnRzXG5cbiAgICAvLyBQcm9jZWR1cmFsbHkgZ2VuZXJhdGUgcG9zaXRpb25zIGZvciBjb250aW5lbnRzXG4gICAgY29uc3QgbnVtQ29udGluZW50cyA9IDU7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1Db250aW5lbnRzOyBpKyspIHtcbiAgICAgIGNvbnN0IGxhdGl0dWRlID0gKE1hdGgucmFuZG9tKCkgLSAwLjUpICogTWF0aC5QSTsgLy8gUmFuZG9tIGxhdGl0dWRlICgtz4AvMiB0byDPgC8yKVxuICAgICAgY29uc3QgbG9uZ2l0dWRlID0gKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMiAqIE1hdGguUEk7IC8vIFJhbmRvbSBsb25naXR1ZGUgKC3PgCB0byDPgClcblxuICAgICAgY29uc3QgeCA9IE1hdGguY29zKGxhdGl0dWRlKSAqIE1hdGguY29zKGxvbmdpdHVkZSkgKiAxLjk7IC8vIFNsaWdodGx5IGluc2lkZSB0aGUgRWFydGgncyBzdXJmYWNlXG4gICAgICBjb25zdCB5ID0gTWF0aC5zaW4obGF0aXR1ZGUpICogMS45O1xuICAgICAgY29uc3QgeiA9IE1hdGguY29zKGxhdGl0dWRlKSAqIE1hdGguc2luKGxvbmdpdHVkZSkgKiAxLjk7XG5cbiAgICAgIGNvbnN0IGNvbnRpbmVudEJhbGwgPSBuZXcgVEhSRUUuTWVzaChjb250aW5lbnRHZW9tZXRyeSwgY29udGluZW50TWF0ZXJpYWwpO1xuICAgICAgY29udGluZW50QmFsbC5wb3NpdGlvbi5zZXQoeCwgeSwgeik7XG4gICAgICBzY2VuZS5hZGQoY29udGluZW50QmFsbCk7XG4gICAgfVxuXG4gICAgLy8gQ3JlYXRlIGEgZnVuY3Rpb24gdG8gYW5pbWF0ZSB0aGUgc2NlbmVcbiAgICBjb25zdCBhbmltYXRlID0gKCkgPT4ge1xuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xuXG4gICAgICAvLyBSb3RhdGUgdGhlIEVhcnRoIGZvciBhbmltYXRpb25cbiAgICAgIGVhcnRoLnJvdGF0aW9uLnkgKz0gMC4wMDU7XG5cbiAgICAgIC8vIFJlbmRlciB0aGUgc2NlbmUgd2l0aCB0aGUgY2FtZXJhXG4gICAgICByZW5kZXJlci5yZW5kZXIoc2NlbmUsIGNhbWVyYSk7XG4gICAgfTtcblxuICAgIC8vIENhbGwgdGhlIGFuaW1hdGUgZnVuY3Rpb24gdG8gc3RhcnQgdGhlIGFuaW1hdGlvblxuICAgIGFuaW1hdGUoKTtcblxuICAgIC8vIENsZWFuIHVwIFRocmVlLmpzIG9iamVjdHMgb24gY29tcG9uZW50IHVubW91bnRcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgcmVuZGVyZXIuZG9tRWxlbWVudC5yZW1vdmUoKTsgLy8gUmVtb3ZlIHRoZSByZW5kZXJlcidzIERPTSBlbGVtZW50XG4gICAgICBzY2VuZS5kaXNwb3NlKCk7IC8vIERpc3Bvc2Ugb2YgdGhlIHNjZW5lIGFuZCBpdHMgY2hpbGRyZW5cbiAgICB9O1xuICB9LCBbXSk7IC8vIEVtcHR5IGRlcGVuZGVuY3kgYXJyYXkgZW5zdXJlcyB0aGUgZWZmZWN0IHJ1bnMgb25jZSBhZnRlciBpbml0aWFsIHJlbmRlclxuXG4gIHJldHVybiBudWxsOyAvLyBTaW5jZSBUaHJlZS5qcyBoYW5kbGVzIHJlbmRlcmluZywgcmV0dXJuIG51bGwgb3IgYW4gZW1wdHkgZGl2XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTcGlubmluZ1BsYW5ldDtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsIlRIUkVFIiwiU3Bpbm5pbmdQbGFuZXQiLCJzY2VuZSIsIlNjZW5lIiwiY2FtZXJhIiwiUGVyc3BlY3RpdmVDYW1lcmEiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJwb3NpdGlvbiIsInoiLCJyZW5kZXJlciIsIldlYkdMUmVuZGVyZXIiLCJzZXRTaXplIiwiZG9jdW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJkb21FbGVtZW50IiwiZ2VvbWV0cnkiLCJTcGhlcmVHZW9tZXRyeSIsImVhcnRoVGV4dHVyZSIsIlRleHR1cmVMb2FkZXIiLCJsb2FkIiwiZWFydGhNYXRlcmlhbCIsIk1lc2hCYXNpY01hdGVyaWFsIiwibWFwIiwiZWFydGgiLCJNZXNoIiwiYWRkIiwiY29udGluZW50R2VvbWV0cnkiLCJjb250aW5lbnRNYXRlcmlhbCIsImNvbG9yIiwibnVtQ29udGluZW50cyIsImkiLCJsYXRpdHVkZSIsIk1hdGgiLCJyYW5kb20iLCJQSSIsImxvbmdpdHVkZSIsIngiLCJjb3MiLCJ5Iiwic2luIiwiY29udGluZW50QmFsbCIsInNldCIsImFuaW1hdGUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJyb3RhdGlvbiIsInJlbmRlciIsInJlbW92ZSIsImRpc3Bvc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/components/planet.js\n"));

/***/ })

});